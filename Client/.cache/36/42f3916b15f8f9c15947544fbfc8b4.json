{"id":"node_modules/reified/lib/inspect.js","dependencies":[{"name":"G:\\computer-science\\konfinity\\digim\\client\\package.json","includedInParent":true,"mtime":1602208794243},{"name":"G:\\computer-science\\konfinity\\digim\\client\\node_modules\\reified\\package.json","includedInParent":true,"mtime":1602208793127},{"name":"util","loc":{"line":1,"column":19},"parent":"G:\\computer-science\\konfinity\\digim\\client\\node_modules\\reified\\lib\\inspect.js","resolved":"C:\\Users\\Kanchan V\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\util\\util.js"},{"name":"./utility","loc":{"line":3,"column":22},"parent":"G:\\computer-science\\konfinity\\digim\\client\\node_modules\\reified\\lib\\inspect.js","resolved":"G:\\computer-science\\konfinity\\digim\\client\\node_modules\\reified\\lib\\utility.js"},{"name":"process","parent":"G:\\computer-science\\konfinity\\digim\\client\\node_modules\\reified\\lib\\inspect.js","resolved":"C:\\Users\\Kanchan V\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\nvar util = require('util');\n\nvar utility = require('./utility');\nvar maxLength = utility.maxLength;\nvar strlen = utility.strlen;\nvar indent = utility.indent;\nvar unique = utility.unique;\nvar pad = utility.pad;\n\nvar names = [ 'black',   'red',      'green',  'yellow',\n              'blue',    'magenta',  'cyan',   'white',\n              'bblack',  'bred',     'bgreen', 'byellow',\n              'bblue',   'bmagenta', 'bcyan',  'bwhite', ];\n\nvar colors = {};\nvar esc = '\\33[';\nfor (var i = 16; i-- > 0;) {\n  colors[names[i]] = [esc+(i > 7 ? '1;':'')+(i%8+30)+'m',\n                      esc+(i > 7 ?'2;':'')+'39m']\n}\nfor (var i = 0; i++ < 8;) {\n  names.push('bg'+names[i]);\n  colors['bg'+names[i]] = [esc+(i+40)+'m', esc+'49m']\n}\nfor (var i = 0; i++ < 8;) {\n  names.push('bg'+names[i+8]);\n  colors['bg'+names[i+8]] = [esc+(i+100)+'m', esc+'25;49m']\n}\n\n\nfunction color(text, name, brackets){\n  if (color.useColor) {\n    if (name[0] === '#') name = hex(name);\n    if (Array.isArray(name)) {\n      name = ansi(name);\n      return name[0]+text+name[1];\n    } else {\n      return colors[name][0]+text+colors[name][1];\n    }\n  } else {\n    return brackets ? brackets[0]+text+brackets[1] : text;\n  }\n}\n\nfunction hex(c){\n  c = '0x' + c.slice(1).replace(c.length > 4 ? c : /./g,'$&$&') | 0;\n  return [c >> 16, c >> 8 & 255, c & 255];\n}\n\nfunction ansi(c){\n  function d(x){ return (x / 255 * 5 + .5) | 0 }\n  var index = d(c[0]) * 36 + d(c[1]) * 6 + d(c[2]) + 16;\n  var start = c[3] === 'bg' ? 48 : 38;\n  return [esc+start + ';5;'+index+'m', esc+(start+1)+'m'];\n}\n\nnames.forEach(function(n){\n  color[n] = function(t, b){ return color(t, n, b) }\n});\n\n\nfunction getSettings(){\n  var caller = getSettings.caller;\n  while (caller = caller.caller) {\n    if (caller.name === 'formatValue') {\n      return caller.arguments[0] || {};\n    }\n  }\n  return {};\n}\n\nmodule.exports = function(className, type){\n  return function(depth){\n    if (this && this.hasOwnProperty && this.hasOwnProperty('constructor')) {\n      return '[Data Prototype]';\n    }\n    var settings = getSettings();\n    color.useColor = !!(process && process.stdout._type === 'tty') || !!(settings.stylize ? settings.stylize.name === 'stylizeWithColor' : false);\n    return inspectors[className][type](this, settings.showHidden, depth, color.useColor);\n  }\n}\n\nfunction toplevelProto(name){\n  return color('['+name+' Prototype]', [255, 0, 150]);\n}\n\nvar inspectors = {\n  Type: {\n    Opaque: function(object, showHidden, depth, useColor){\n      return color(object.name, [200,175,125], '‹›');\n    },\n    NumericType: function(object, showHidden, depth, useColor){\n      if (Object.prototype.hasOwnProperty.call(object, 'Type')) return toplevelProto('NumericType');\n      return color.bmagenta(object.name, '‹›') + color.bblue('('+object.bytes+'b)');\n    },\n    PointerType: function(object, showHidden, depth, useColor){\n      if (Object.prototype.hasOwnProperty.call(object, 'Type')) return toplevelProto('PointerType');\n      var label = object.displayName;\n      var pointee = util.inspect(object.pointeeType, showHidden, depth-1, useColor);\n      if (~pointee.indexOf(' ')) {\n        pointee = pointee.slice(pointee.indexOf(' '));\n      } else {\n        pointee = '';\n      }\n      if (pointee.length > 60 || ~pointee.indexOf('\\n')) {\n        label += '\\n  ';\n        pointee = indent(pointee);\n      }\n      return color.red(label, '‹›') + pointee;\n    },\n    CharType: function(object, showHidden, depth, useColor){\n      if (Object.prototype.hasOwnProperty.call(object, 'Type')) return toplevelProto('CharType');\n      return color.bgreen('CharArray', '‹›') + color.bblue('('+object.bytes+'b)');\n    },\n    ArrayType: function(object, showHidden, depth, useColor){\n      if (Object.prototype.hasOwnProperty.call(object, 'Type')) return toplevelProto('ArrayType');\n      var label = color.byellow(object.name, '‹›') + color.bblue('('+object.bytes+'b)');\n      var memberType = util.inspect(object.memberType, showHidden, depth-1, useColor);\n      if (~memberType.indexOf('\\n') || strlen(memberType) > 60) {\n        label += '\\n';\n        memberType = indent(memberType).slice(2);\n      } else {\n        label + ' '\n      }\n      return label+'[ '+object.count+' '+memberType+' ]';\n    },\n    StructType: function(object, showHidden, depth, useColor){\n      if (Object.prototype.hasOwnProperty.call(object, 'Type')) return toplevelProto('StructType');\n      var length = 0;\n      var fields = unique(object.keys.concat(Object.keys(object)));\n      fields = fields.map(function(field){\n        field = [color.bwhite(field), util.inspect(object.fields[field], showHidden, depth-1, useColor)];\n        length += strlen(field[0]) + strlen(field[1]);\n        return field;\n      });\n\n      var label = color.bcyan(object.name, '‹›') + color.bblue('('+object.bytes+'b)');\n      if (length > 60) {\n        var max = maxLength(object.keys)+4;\n        return label+'\\n| '+fields.map(function(field){ return pad(color.bwhite(field[0]+':'), max) + field[1] }).join('\\n| ');\n      } else {\n        return label+' { '+fields.map(function(field){ return color.bwhite(field[0]+': ')+field[1] }).join(' | ') + ' }';\n      }\n    },\n    BitfieldType: function(object, showHidden, depth, useColor){\n      if (Object.prototype.hasOwnProperty.call(object, 'Type')) return toplevelProto('BitfieldType');\n      var label = color.bgreen(object.name || 'Bitfield', '‹›') + color.bblue('('+object.bytes*8+'bit)');\n      if (Object(object.keys) !== object.keys) return util.inspect(object.keys);\n      var flags = Object.keys(object.keys);\n      if (!flags.length) {\n        return label;\n      } else {\n        return label+'\\n'+flags.map(function(flag){\n          return ' · '+pad(color.bgreen('0x'+object.keys[flag].toString(16)), Math.log(object.bytes+1.3)*10|0) + flag;\n        }).join('\\n');\n      }\n    }\n  },\n  Data: {\n    Opaque: function(object, showHidden, depth, useColor){\n      return color(object.constructor.name, [200,175,125], '<>')+' ('+object.bytes+'b)';\n    },\n    NumericType: function(object, showHidden, depth, useColor){\n      if (!object.reify) return toplevelProto('NumericData');\n      return color.magenta(object.constructor.name, '<>')+' '+color.bmagenta(object.reify());\n    },\n    PointerType: function(object, showHidden, depth, useColor){\n      if (!object.reify) return toplevelProto('PointerData');\n      var label = color.red(object.constructor.displayName, '<>');\n      var address = ' ('+util.inspect(object.address)+')';\n\n      var pointee = util.inspect(object.pointee, showHidden, depth-1, useColor);\n      if (pointee.length > 60 || ~pointee.indexOf('\\n')) {\n        pointee = indent(pointee.slice(pointee.indexOf('\\n'))).slice(2);\n      } else {\n        pointee = ~pointee.indexOf(' ') ? pointee.slice(pointee.indexOf(' ')) : '';\n      }\n      return label + address + pointee;\n    },\n    CharType: function(object, showHidden, depth, useColor){\n      if (object.bytes === 1) {\n        return color.green('Char', '<>')+' '+color.bgreen(\"'\"+object.reify()+\"'\").replace(/\\0/g,' ');\n      } else {\n        return color.green('Char'+object.length, '<>')+' '+color.bgreen(\"'\"+object.reify().replace(/\\0/g,' ')+\"'\");\n      }\n    },\n    ArrayType: function(object, showHidden, depth, useColor){\n      if (!object.constructor.memberType) return toplevelProto('ArrayData');\n      var fields = util.inspect(object.map(function(item){ return item }), showHidden, depth-1, useColor);\n      var sep = strlen(fields) > 60 ? '\\n' : ' ';\n      return color.yellow(object.constructor.name, '<>')+sep+fields;\n    },\n    StructType: function(object, showHidden, depth, useColor){\n      if (!object.constructor.keys) return toplevelProto('StructData');\n      var length = 0;\n      var fields = unique((object.constructor.keys).concat(Object.keys(object)));\n      var fields = fields.map(function(field){\n        field = [field, util.inspect(object[field], showHidden, depth-1, useColor)];\n        length += strlen(field[0]) + strlen(field[1]);\n        return field;\n      });\n\n      var label = color.cyan(object.constructor.name, '<>');\n      if (length > 60) {\n        var max = maxLength(object.constructor.keys)+4;\n        return label + '\\n| '+fields.map(function(field){ return pad(field[0]+': ', max) + field[1] }).join('\\n| ');\n      } else {\n        return label+' { '+fields.map(function(field){ return field.join(': ') }).join(' | ') + ' }';\n      }\n    },\n    BitfieldType: function(object, showHidden, depth, useColor){\n      if (!object.flags) return toplevelProto('BitfieldData');\n      var label = color.green(object.constructor.name || 'Bitfield', '‹›');\n      var flags = object.flags ? Object.keys(object.flags) : [];\n      if (!flags.length) {\n        return label + '['+object+']';\n      } else {\n        var max = maxLength(object.flags)+4;\n        return label +'\\n · ' + flags.map(function(flag, index){\n          return pad(color.bwhite(flag+':'), max) + color.green(object[flag]);\n        }).join(',\\n · ');\n      }\n    }\n  }\n};\n\nfunction stripansi(str){ return str.replace(/\\033\\[(?:\\d+;)*\\d+m/g, '') }"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/reified/lib/inspect.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/reified/lib/inspect.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}}],"sources":{"node_modules/reified/lib/inspect.js":"var util = require('util');\n\nvar utility = require('./utility');\nvar maxLength = utility.maxLength;\nvar strlen = utility.strlen;\nvar indent = utility.indent;\nvar unique = utility.unique;\nvar pad = utility.pad;\n\nvar names = [ 'black',   'red',      'green',  'yellow',\n              'blue',    'magenta',  'cyan',   'white',\n              'bblack',  'bred',     'bgreen', 'byellow',\n              'bblue',   'bmagenta', 'bcyan',  'bwhite', ];\n\nvar colors = {};\nvar esc = '\\33[';\nfor (var i = 16; i-- > 0;) {\n  colors[names[i]] = [esc+(i > 7 ? '1;':'')+(i%8+30)+'m',\n                      esc+(i > 7 ?'2;':'')+'39m']\n}\nfor (var i = 0; i++ < 8;) {\n  names.push('bg'+names[i]);\n  colors['bg'+names[i]] = [esc+(i+40)+'m', esc+'49m']\n}\nfor (var i = 0; i++ < 8;) {\n  names.push('bg'+names[i+8]);\n  colors['bg'+names[i+8]] = [esc+(i+100)+'m', esc+'25;49m']\n}\n\n\nfunction color(text, name, brackets){\n  if (color.useColor) {\n    if (name[0] === '#') name = hex(name);\n    if (Array.isArray(name)) {\n      name = ansi(name);\n      return name[0]+text+name[1];\n    } else {\n      return colors[name][0]+text+colors[name][1];\n    }\n  } else {\n    return brackets ? brackets[0]+text+brackets[1] : text;\n  }\n}\n\nfunction hex(c){\n  c = '0x' + c.slice(1).replace(c.length > 4 ? c : /./g,'$&$&') | 0;\n  return [c >> 16, c >> 8 & 255, c & 255];\n}\n\nfunction ansi(c){\n  function d(x){ return (x / 255 * 5 + .5) | 0 }\n  var index = d(c[0]) * 36 + d(c[1]) * 6 + d(c[2]) + 16;\n  var start = c[3] === 'bg' ? 48 : 38;\n  return [esc+start + ';5;'+index+'m', esc+(start+1)+'m'];\n}\n\nnames.forEach(function(n){\n  color[n] = function(t, b){ return color(t, n, b) }\n});\n\n\nfunction getSettings(){\n  var caller = getSettings.caller;\n  while (caller = caller.caller) {\n    if (caller.name === 'formatValue') {\n      return caller.arguments[0] || {};\n    }\n  }\n  return {};\n}\n\nmodule.exports = function(className, type){\n  return function(depth){\n    if (this && this.hasOwnProperty && this.hasOwnProperty('constructor')) {\n      return '[Data Prototype]';\n    }\n    var settings = getSettings();\n    color.useColor = !!(process && process.stdout._type === 'tty') || !!(settings.stylize ? settings.stylize.name === 'stylizeWithColor' : false);\n    return inspectors[className][type](this, settings.showHidden, depth, color.useColor);\n  }\n}\n\nfunction toplevelProto(name){\n  return color('['+name+' Prototype]', [255, 0, 150]);\n}\n\nvar inspectors = {\n  Type: {\n    Opaque: function(object, showHidden, depth, useColor){\n      return color(object.name, [200,175,125], '‹›');\n    },\n    NumericType: function(object, showHidden, depth, useColor){\n      if (Object.prototype.hasOwnProperty.call(object, 'Type')) return toplevelProto('NumericType');\n      return color.bmagenta(object.name, '‹›') + color.bblue('('+object.bytes+'b)');\n    },\n    PointerType: function(object, showHidden, depth, useColor){\n      if (Object.prototype.hasOwnProperty.call(object, 'Type')) return toplevelProto('PointerType');\n      var label = object.displayName;\n      var pointee = util.inspect(object.pointeeType, showHidden, depth-1, useColor);\n      if (~pointee.indexOf(' ')) {\n        pointee = pointee.slice(pointee.indexOf(' '));\n      } else {\n        pointee = '';\n      }\n      if (pointee.length > 60 || ~pointee.indexOf('\\n')) {\n        label += '\\n  ';\n        pointee = indent(pointee);\n      }\n      return color.red(label, '‹›') + pointee;\n    },\n    CharType: function(object, showHidden, depth, useColor){\n      if (Object.prototype.hasOwnProperty.call(object, 'Type')) return toplevelProto('CharType');\n      return color.bgreen('CharArray', '‹›') + color.bblue('('+object.bytes+'b)');\n    },\n    ArrayType: function(object, showHidden, depth, useColor){\n      if (Object.prototype.hasOwnProperty.call(object, 'Type')) return toplevelProto('ArrayType');\n      var label = color.byellow(object.name, '‹›') + color.bblue('('+object.bytes+'b)');\n      var memberType = util.inspect(object.memberType, showHidden, depth-1, useColor);\n      if (~memberType.indexOf('\\n') || strlen(memberType) > 60) {\n        label += '\\n';\n        memberType = indent(memberType).slice(2);\n      } else {\n        label + ' '\n      }\n      return label+'[ '+object.count+' '+memberType+' ]';\n    },\n    StructType: function(object, showHidden, depth, useColor){\n      if (Object.prototype.hasOwnProperty.call(object, 'Type')) return toplevelProto('StructType');\n      var length = 0;\n      var fields = unique(object.keys.concat(Object.keys(object)));\n      fields = fields.map(function(field){\n        field = [color.bwhite(field), util.inspect(object.fields[field], showHidden, depth-1, useColor)];\n        length += strlen(field[0]) + strlen(field[1]);\n        return field;\n      });\n\n      var label = color.bcyan(object.name, '‹›') + color.bblue('('+object.bytes+'b)');\n      if (length > 60) {\n        var max = maxLength(object.keys)+4;\n        return label+'\\n| '+fields.map(function(field){ return pad(color.bwhite(field[0]+':'), max) + field[1] }).join('\\n| ');\n      } else {\n        return label+' { '+fields.map(function(field){ return color.bwhite(field[0]+': ')+field[1] }).join(' | ') + ' }';\n      }\n    },\n    BitfieldType: function(object, showHidden, depth, useColor){\n      if (Object.prototype.hasOwnProperty.call(object, 'Type')) return toplevelProto('BitfieldType');\n      var label = color.bgreen(object.name || 'Bitfield', '‹›') + color.bblue('('+object.bytes*8+'bit)');\n      if (Object(object.keys) !== object.keys) return util.inspect(object.keys);\n      var flags = Object.keys(object.keys);\n      if (!flags.length) {\n        return label;\n      } else {\n        return label+'\\n'+flags.map(function(flag){\n          return ' · '+pad(color.bgreen('0x'+object.keys[flag].toString(16)), Math.log(object.bytes+1.3)*10|0) + flag;\n        }).join('\\n');\n      }\n    }\n  },\n  Data: {\n    Opaque: function(object, showHidden, depth, useColor){\n      return color(object.constructor.name, [200,175,125], '<>')+' ('+object.bytes+'b)';\n    },\n    NumericType: function(object, showHidden, depth, useColor){\n      if (!object.reify) return toplevelProto('NumericData');\n      return color.magenta(object.constructor.name, '<>')+' '+color.bmagenta(object.reify());\n    },\n    PointerType: function(object, showHidden, depth, useColor){\n      if (!object.reify) return toplevelProto('PointerData');\n      var label = color.red(object.constructor.displayName, '<>');\n      var address = ' ('+util.inspect(object.address)+')';\n\n      var pointee = util.inspect(object.pointee, showHidden, depth-1, useColor);\n      if (pointee.length > 60 || ~pointee.indexOf('\\n')) {\n        pointee = indent(pointee.slice(pointee.indexOf('\\n'))).slice(2);\n      } else {\n        pointee = ~pointee.indexOf(' ') ? pointee.slice(pointee.indexOf(' ')) : '';\n      }\n      return label + address + pointee;\n    },\n    CharType: function(object, showHidden, depth, useColor){\n      if (object.bytes === 1) {\n        return color.green('Char', '<>')+' '+color.bgreen(\"'\"+object.reify()+\"'\").replace(/\\0/g,' ');\n      } else {\n        return color.green('Char'+object.length, '<>')+' '+color.bgreen(\"'\"+object.reify().replace(/\\0/g,' ')+\"'\");\n      }\n    },\n    ArrayType: function(object, showHidden, depth, useColor){\n      if (!object.constructor.memberType) return toplevelProto('ArrayData');\n      var fields = util.inspect(object.map(function(item){ return item }), showHidden, depth-1, useColor);\n      var sep = strlen(fields) > 60 ? '\\n' : ' ';\n      return color.yellow(object.constructor.name, '<>')+sep+fields;\n    },\n    StructType: function(object, showHidden, depth, useColor){\n      if (!object.constructor.keys) return toplevelProto('StructData');\n      var length = 0;\n      var fields = unique((object.constructor.keys).concat(Object.keys(object)));\n      var fields = fields.map(function(field){\n        field = [field, util.inspect(object[field], showHidden, depth-1, useColor)];\n        length += strlen(field[0]) + strlen(field[1]);\n        return field;\n      });\n\n      var label = color.cyan(object.constructor.name, '<>');\n      if (length > 60) {\n        var max = maxLength(object.constructor.keys)+4;\n        return label + '\\n| '+fields.map(function(field){ return pad(field[0]+': ', max) + field[1] }).join('\\n| ');\n      } else {\n        return label+' { '+fields.map(function(field){ return field.join(': ') }).join(' | ') + ' }';\n      }\n    },\n    BitfieldType: function(object, showHidden, depth, useColor){\n      if (!object.flags) return toplevelProto('BitfieldData');\n      var label = color.green(object.constructor.name || 'Bitfield', '‹›');\n      var flags = object.flags ? Object.keys(object.flags) : [];\n      if (!flags.length) {\n        return label + '['+object+']';\n      } else {\n        var max = maxLength(object.flags)+4;\n        return label +'\\n · ' + flags.map(function(flag, index){\n          return pad(color.bwhite(flag+':'), max) + color.green(object[flag]);\n        }).join(',\\n · ');\n      }\n    }\n  }\n};\n\nfunction stripansi(str){ return str.replace(/\\033\\[(?:\\d+;)*\\d+m/g, '') }"},"lineCount":228}},"error":null,"hash":"29b498380149450d186eb65544fee987","cacheData":{"env":{}}}