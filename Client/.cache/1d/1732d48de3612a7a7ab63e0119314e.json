{"id":"node_modules/reified/lib/struct.js","dependencies":[{"name":"G:\\computer-science\\konfinity\\digim\\client\\package.json","includedInParent":true,"mtime":1602208794243},{"name":"G:\\computer-science\\konfinity\\digim\\client\\node_modules\\reified\\package.json","includedInParent":true,"mtime":1602208793127},{"name":"./utility","loc":{"line":2,"column":28},"parent":"G:\\computer-science\\konfinity\\digim\\client\\node_modules\\reified\\lib\\struct.js","resolved":"G:\\computer-science\\konfinity\\digim\\client\\node_modules\\reified\\lib\\utility.js"},{"name":"./genesis","loc":{"line":3,"column":28},"parent":"G:\\computer-science\\konfinity\\digim\\client\\node_modules\\reified\\lib\\struct.js","resolved":"G:\\computer-science\\konfinity\\digim\\client\\node_modules\\reified\\lib\\genesis.js"}],"generated":{"js":"\"use strict\";\nvar isObject      = require('./utility').isObject;\nvar genesis       = require('./genesis');\nvar StructSubtype = genesis.Subtype.bind(StructType);\n\nmodule.exports = StructType;\n\n\n// ##############################\n// ### StructType Constructor ###\n// ##############################\n\nfunction StructType(name, fields){\n  if (!fields) {\n    fields = name;\n    name = '';\n  }\n\n  var bytes = 0;\n  var offsets = {};\n  var keys = [];\n\n  fields = Object.keys(fields).reduce(function(ret, name){\n    ret[name] = genesis.lookupType(fields[name]);\n    keys.push(name);\n    offsets[name] = bytes;\n    bytes += ret[name].bytes;\n    return ret;\n  }, {});\n\n  // ###########################\n  // ### StructT Constructor ###\n  // ###########################\n\n  function StructT(data, offset, values){\n    if (!genesis.isBuffer(data)) {\n      values = data;\n      data = null;\n    }\n    genesis.api(this, '_offset', +offset || 0);\n    this.rebase(data);\n\n    if (values) {\n      Object.keys(values).forEach(function(field){\n        if (!field in fields) throw new Error('Invalid field \"'+field+'\"');\n        field in fields && initField(this, StructT, field).write(values[field]);\n     }, this);\n    }\n    return this;\n  }\n\n\n  StructT.fields = fields;\n  StructT.offsets = offsets;\n  StructT.keys = keys;\n\n  return defineFields(StructSubtype(name, bytes, StructT));\n}\n\nfunction initField(target, ctor, field){\n  var block = new ctor.fields[field](target._data, target._offset + ctor.offsets[field]) ;\n  Object.defineProperty(target, field, {\n    enumerable: true,\n    configurable: true,\n    get: function(){ return block },\n    set: function(v){\n      if (v === null) {\n        genesis.nullable(this, field);\n        block = null;\n      } else {\n        block.write(v);\n      }\n    }\n  });\n  return block;\n}\n\nfunction defineFields(target){\n  target.keys.forEach(function(field){\n    Object.defineProperty(target.prototype, field, {\n      enumerable: true,\n      configurable: true,\n      get: function(){ return initField(this, target, field) },\n      set: function(v){ initField(this, target, field).write(v) }\n    });\n  });\n  return target;\n}\n\n// #######################\n// ### StructType Data ###\n// #######################\n\ngenesis.Type(StructType, {\n  DataType: 'struct',\n\n  reify: function reify(deallocate){\n    return  this.constructor.keys.reduce(function(ret, field){\n      ret[field] = this[field] == null ? initField(this, this.constructor, field).reify(deallocate) : this[field].reify(deallocate);\n      if (deallocate) this[field] = null;\n      return ret;\n    }.bind(this), {});\n  },\n\n  write: function write(o){\n    if (isObject(o)) {\n      if (o.reify) o = o.reify();\n      Object.keys(o).forEach(function(field, current){\n        current = o[field];\n        if (current != null) {\n          this[field] = current.reify ? current.reify() : current;\n        } else if (current === null) {\n          this[field] = null;\n        }\n      }, this);\n    }\n  },\n\n  realign: function realign(offset, deallocate){\n    this._offset = offset = +offset || 0;\n    Object.keys(this).forEach(function(field){\n      if (deallocate) this[field] = null;\n      else this[field].realign(offset);\n    }, this);\n  },\n\n  fill: function fill(val){\n    val = val || 0;\n    this.constructor.keys.forEach(function(field){\n      this[field] = val;\n    }, this);\n  },\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/reified/lib/struct.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/reified/lib/struct.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}}],"sources":{"node_modules/reified/lib/struct.js":"\"use strict\";\nvar isObject      = require('./utility').isObject;\nvar genesis       = require('./genesis');\nvar StructSubtype = genesis.Subtype.bind(StructType);\n\nmodule.exports = StructType;\n\n\n// ##############################\n// ### StructType Constructor ###\n// ##############################\n\nfunction StructType(name, fields){\n  if (!fields) {\n    fields = name;\n    name = '';\n  }\n\n  var bytes = 0;\n  var offsets = {};\n  var keys = [];\n\n  fields = Object.keys(fields).reduce(function(ret, name){\n    ret[name] = genesis.lookupType(fields[name]);\n    keys.push(name);\n    offsets[name] = bytes;\n    bytes += ret[name].bytes;\n    return ret;\n  }, {});\n\n  // ###########################\n  // ### StructT Constructor ###\n  // ###########################\n\n  function StructT(data, offset, values){\n    if (!genesis.isBuffer(data)) {\n      values = data;\n      data = null;\n    }\n    genesis.api(this, '_offset', +offset || 0);\n    this.rebase(data);\n\n    if (values) {\n      Object.keys(values).forEach(function(field){\n        if (!field in fields) throw new Error('Invalid field \"'+field+'\"');\n        field in fields && initField(this, StructT, field).write(values[field]);\n     }, this);\n    }\n    return this;\n  }\n\n\n  StructT.fields = fields;\n  StructT.offsets = offsets;\n  StructT.keys = keys;\n\n  return defineFields(StructSubtype(name, bytes, StructT));\n}\n\nfunction initField(target, ctor, field){\n  var block = new ctor.fields[field](target._data, target._offset + ctor.offsets[field]) ;\n  Object.defineProperty(target, field, {\n    enumerable: true,\n    configurable: true,\n    get: function(){ return block },\n    set: function(v){\n      if (v === null) {\n        genesis.nullable(this, field);\n        block = null;\n      } else {\n        block.write(v);\n      }\n    }\n  });\n  return block;\n}\n\nfunction defineFields(target){\n  target.keys.forEach(function(field){\n    Object.defineProperty(target.prototype, field, {\n      enumerable: true,\n      configurable: true,\n      get: function(){ return initField(this, target, field) },\n      set: function(v){ initField(this, target, field).write(v) }\n    });\n  });\n  return target;\n}\n\n// #######################\n// ### StructType Data ###\n// #######################\n\ngenesis.Type(StructType, {\n  DataType: 'struct',\n\n  reify: function reify(deallocate){\n    return  this.constructor.keys.reduce(function(ret, field){\n      ret[field] = this[field] == null ? initField(this, this.constructor, field).reify(deallocate) : this[field].reify(deallocate);\n      if (deallocate) this[field] = null;\n      return ret;\n    }.bind(this), {});\n  },\n\n  write: function write(o){\n    if (isObject(o)) {\n      if (o.reify) o = o.reify();\n      Object.keys(o).forEach(function(field, current){\n        current = o[field];\n        if (current != null) {\n          this[field] = current.reify ? current.reify() : current;\n        } else if (current === null) {\n          this[field] = null;\n        }\n      }, this);\n    }\n  },\n\n  realign: function realign(offset, deallocate){\n    this._offset = offset = +offset || 0;\n    Object.keys(this).forEach(function(field){\n      if (deallocate) this[field] = null;\n      else this[field].realign(offset);\n    }, this);\n  },\n\n  fill: function fill(val){\n    val = val || 0;\n    this.constructor.keys.forEach(function(field){\n      this[field] = val;\n    }, this);\n  },\n});\n"},"lineCount":134}},"error":null,"hash":"f5458b3de708c025d497219bf2a82447","cacheData":{"env":{}}}