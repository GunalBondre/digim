{"id":"node_modules/reified/lib/buffer.js","dependencies":[{"name":"G:\\computer-science\\konfinity\\digim\\client\\package.json","includedInParent":true,"mtime":1602208794243},{"name":"G:\\computer-science\\konfinity\\digim\\client\\node_modules\\reified\\package.json","includedInParent":true,"mtime":1602208793127}],"generated":{"js":"\nvar global = arguments[3];\n\"use strict\";\n\n\nmodule.exports = DataBuffer;\n\nvar types = ['Int8', 'Int16', 'Int32', 'Uint8', 'Uint16', 'Uint32', 'Float32', 'Float64'];\n\n// Basic stand-in for Buffer in browsers that defers to ArrayBuffer\nvar Buffer = function(global){\n  if ('Buffer' in global) return global.Buffer;\n\n  function Buffer(subject, offset, length){\n    return new ArrayBuffer(subject, offset, length);\n  }\n  Buffer.isBuffer = function isBuffer(o){\n    return o instanceof ArrayBuffer;\n  }\n  return Buffer;\n}(Function('return this')());\n\nvar ArrayBuffers = { ArrayBuffer:  ArrayBuffer };\n\nfunction isArrayBuffer(o){\n  return o instanceof ArrayBuffer || !!(o && o.constructor && o.constructor.name in ArrayBuffers);\n}\n\n\nfunction DataBuffer(subject, offset, length){\n  if (!DataBuffer.prototype.isPrototypeOf(this)) return new DataBuffer(subject, offset, length);\n  if (!subject) throw new Error('Tried to initialize with no usable length or subject');\n  if (isArrayBuffer(subject)) {\n    this.array = subject;\n  }\n\n  if (subject) {\n    if (subject.buffer) {\n      offset = (subject.offset || subject.byteOffset || 0) + (offset || 0);\n      while (subject.buffer) subject = subject.buffer;\n    }\n    if (typeof offset === 'undefined') {\n      offset = subject.offset || subject.byteOffset;\n    }\n    if (typeof length === 'undefined') {\n      length = subject.length || subject.byteLength;\n    }\n  }\n\n  if (typeof subject === 'number') {\n    this.view = new DataView(new Buffer(subject));\n  } else if (Buffer.isBuffer(subject)) {\n    this.view = new DataView(subject, offset, length);\n  } else if (subject instanceof DataView) {\n    this.view = new DataView(subject.buffer, offset, length);\n  } else if (DataBuffer.isDataBuffer(subject)) {\n    this.view = new DataView(subject.buffer, subject.offset + offset, length || subject.length);\n  }\n  this.length = this.view.byteLength;\n  this.buffer = this.view.buffer;\n  this.offset = this.view.byteOffset;\n}\n\nDataBuffer.isBuffer = Buffer.isBuffer;\nDataBuffer.isDataBuffer = function isDataBuffer(o){ return DataBuffer.prototype.isPrototypeOf(o) }\n\nfunction toNum(n){ return isFinite(n) ? +n : 0 }\nfunction toNumOrUndef(n){ if (isFinite(n)) return +n }\nfunction toUint8(x) { return (x >>> 0) & 0xff }\n\nDataBuffer.prototype = {\n  constructor: DataBuffer,\n  endianness: 'LE',\n\n  subarray: function(start, end){\n    start = toNum(start);\n    end = toNumOrUndef(end);\n    return new DataBuffer(this.view, start, end);\n  },\n\n  typed: function(type, offset, length){\n    type = ArrayBuffers[type+'Array'];\n    if (arguments.length === 1) {\n      return new type(this.view);\n    } else if (arguments.length === 2) {\n      return new type(this.view, toNum(offset));\n    } else {\n      length = toNum(length) || (this.length / type.BYTES_PER_ELEMENT) | 0;\n      return new type(this.view, toNum(offset), length);\n    }\n  },\n\n  copy: function(target, targetOffset, start, end){\n    if (isFinite(target)) {\n      end = start, start = targetOffset, targetOffset = target;\n      target = null;\n    }\n    targetOffset = toNum(targetOffset);\n    start = toNum(start);\n    end = end ? +end : this.length - 1;\n    if (start > end) throw new Error('End less than start');\n    if (start < 0) throw new RangeError('Start less than zero');\n    if (end >= this.length) throw new RangeError('End greater than length');\n    var length = end - start;\n    if (!target) {\n      target = new Buffer(length);\n    } else if (targetOffset + length > target.length) {\n      length = target.length;\n    }\n\n    target = new DataBuffer(target, targetOffset, length).typed('Uint8');\n    var source = this.subarray(start, end).typed('Uint8');\n    for (var i=0; i<length; i++) {\n      target[i] = source[i];\n    }\n    return target;\n  },\n\n  clone: function(){\n    var buffer = new DataBuffer(new Buffer(this.length));\n    for (var i=0; i < this.length; i++) {\n      buffer.writeUint8(i, this.readUint8(i));\n    }\n    return buffer;\n  },\n\n  fill: function(v){\n    v = toNum(v);\n    var buff = this.typed('Uint8');\n    for (var i=0; i < this.length; i++) {\n      buff[i] = v;\n    }\n  },\n\n  write: function(source, offset, length){\n    length = isFinite(length) ? +length : source.length;\n    offset = isFinite(offset) ? +offset : 0;\n    length = Math.min(this.length, length+offset, source.length);\n    var target = this.subarray(offset, offset.length).typed('Uint8');\n    for (var i=0; i<length; i++) {\n      target[i] = source[i];\n    }\n    return this;\n  },\n\n  map: function(){\n    return [].map.apply(this.typed('Uint8'), arguments);\n  },\n\n  slice: function(start, end, encoding){\n    return this.subarray(start, end).toString(encoding || 'ascii');\n  },\n\n  toArray: function(type){\n    return [].map.call(this.typed(type || 'Uint8'), function(x){ return x });\n  },\n\n  toString: function(encoding){\n    switch (encoding) {\n      case 'ascii':\n        return this.map(function(val){\n          return String.fromCharCode(val);\n        }).join('');\n      default:\n        return this.map(function(v){\n          return ('000'+v.toString(10)).slice(-3)\n        })\n          .join(' ')\n          .split(/((?:\\d\\d\\d ?){10}(?: ))/)\n          .filter(Boolean)\n          .map(Function.call.bind(''.trim))\n          .join('\\n')\n    }\n  }\n}\n\ntypes.forEach(function(type){\n  ArrayBuffers[type+'Array'] = global[type+'Array'];\n  DataBuffer.prototype['read'+type] = function(offset){\n    return this.view['get'+type](toNum(offset), this.endianness === 'LE');\n  }\n  DataBuffer.prototype['write'+type] = function(offset, value){\n    return this.view['set'+type](toNum(offset), toNum(value), this.endianness === 'LE');\n  }\n});\n\n\nArray.apply(null, Array(20)).forEach(function(n, index){\n  Object.defineProperty(DataBuffer.prototype, index, {\n    configurable: true,\n    get: function(){ return this.readUint8(index) },\n    set: function(v){ return this.writeUint8(index, v) }\n  })\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/reified/lib/buffer.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/reified/lib/buffer.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}}],"sources":{"node_modules/reified/lib/buffer.js":"\"use strict\";\n\n\nmodule.exports = DataBuffer;\n\nvar types = ['Int8', 'Int16', 'Int32', 'Uint8', 'Uint16', 'Uint32', 'Float32', 'Float64'];\n\n// Basic stand-in for Buffer in browsers that defers to ArrayBuffer\nvar Buffer = function(global){\n  if ('Buffer' in global) return global.Buffer;\n\n  function Buffer(subject, offset, length){\n    return new ArrayBuffer(subject, offset, length);\n  }\n  Buffer.isBuffer = function isBuffer(o){\n    return o instanceof ArrayBuffer;\n  }\n  return Buffer;\n}(Function('return this')());\n\nvar ArrayBuffers = { ArrayBuffer:  ArrayBuffer };\n\nfunction isArrayBuffer(o){\n  return o instanceof ArrayBuffer || !!(o && o.constructor && o.constructor.name in ArrayBuffers);\n}\n\n\nfunction DataBuffer(subject, offset, length){\n  if (!DataBuffer.prototype.isPrototypeOf(this)) return new DataBuffer(subject, offset, length);\n  if (!subject) throw new Error('Tried to initialize with no usable length or subject');\n  if (isArrayBuffer(subject)) {\n    this.array = subject;\n  }\n\n  if (subject) {\n    if (subject.buffer) {\n      offset = (subject.offset || subject.byteOffset || 0) + (offset || 0);\n      while (subject.buffer) subject = subject.buffer;\n    }\n    if (typeof offset === 'undefined') {\n      offset = subject.offset || subject.byteOffset;\n    }\n    if (typeof length === 'undefined') {\n      length = subject.length || subject.byteLength;\n    }\n  }\n\n  if (typeof subject === 'number') {\n    this.view = new DataView(new Buffer(subject));\n  } else if (Buffer.isBuffer(subject)) {\n    this.view = new DataView(subject, offset, length);\n  } else if (subject instanceof DataView) {\n    this.view = new DataView(subject.buffer, offset, length);\n  } else if (DataBuffer.isDataBuffer(subject)) {\n    this.view = new DataView(subject.buffer, subject.offset + offset, length || subject.length);\n  }\n  this.length = this.view.byteLength;\n  this.buffer = this.view.buffer;\n  this.offset = this.view.byteOffset;\n}\n\nDataBuffer.isBuffer = Buffer.isBuffer;\nDataBuffer.isDataBuffer = function isDataBuffer(o){ return DataBuffer.prototype.isPrototypeOf(o) }\n\nfunction toNum(n){ return isFinite(n) ? +n : 0 }\nfunction toNumOrUndef(n){ if (isFinite(n)) return +n }\nfunction toUint8(x) { return (x >>> 0) & 0xff }\n\nDataBuffer.prototype = {\n  constructor: DataBuffer,\n  endianness: 'LE',\n\n  subarray: function(start, end){\n    start = toNum(start);\n    end = toNumOrUndef(end);\n    return new DataBuffer(this.view, start, end);\n  },\n\n  typed: function(type, offset, length){\n    type = ArrayBuffers[type+'Array'];\n    if (arguments.length === 1) {\n      return new type(this.view);\n    } else if (arguments.length === 2) {\n      return new type(this.view, toNum(offset));\n    } else {\n      length = toNum(length) || (this.length / type.BYTES_PER_ELEMENT) | 0;\n      return new type(this.view, toNum(offset), length);\n    }\n  },\n\n  copy: function(target, targetOffset, start, end){\n    if (isFinite(target)) {\n      end = start, start = targetOffset, targetOffset = target;\n      target = null;\n    }\n    targetOffset = toNum(targetOffset);\n    start = toNum(start);\n    end = end ? +end : this.length - 1;\n    if (start > end) throw new Error('End less than start');\n    if (start < 0) throw new RangeError('Start less than zero');\n    if (end >= this.length) throw new RangeError('End greater than length');\n    var length = end - start;\n    if (!target) {\n      target = new Buffer(length);\n    } else if (targetOffset + length > target.length) {\n      length = target.length;\n    }\n\n    target = new DataBuffer(target, targetOffset, length).typed('Uint8');\n    var source = this.subarray(start, end).typed('Uint8');\n    for (var i=0; i<length; i++) {\n      target[i] = source[i];\n    }\n    return target;\n  },\n\n  clone: function(){\n    var buffer = new DataBuffer(new Buffer(this.length));\n    for (var i=0; i < this.length; i++) {\n      buffer.writeUint8(i, this.readUint8(i));\n    }\n    return buffer;\n  },\n\n  fill: function(v){\n    v = toNum(v);\n    var buff = this.typed('Uint8');\n    for (var i=0; i < this.length; i++) {\n      buff[i] = v;\n    }\n  },\n\n  write: function(source, offset, length){\n    length = isFinite(length) ? +length : source.length;\n    offset = isFinite(offset) ? +offset : 0;\n    length = Math.min(this.length, length+offset, source.length);\n    var target = this.subarray(offset, offset.length).typed('Uint8');\n    for (var i=0; i<length; i++) {\n      target[i] = source[i];\n    }\n    return this;\n  },\n\n  map: function(){\n    return [].map.apply(this.typed('Uint8'), arguments);\n  },\n\n  slice: function(start, end, encoding){\n    return this.subarray(start, end).toString(encoding || 'ascii');\n  },\n\n  toArray: function(type){\n    return [].map.call(this.typed(type || 'Uint8'), function(x){ return x });\n  },\n\n  toString: function(encoding){\n    switch (encoding) {\n      case 'ascii':\n        return this.map(function(val){\n          return String.fromCharCode(val);\n        }).join('');\n      default:\n        return this.map(function(v){\n          return ('000'+v.toString(10)).slice(-3)\n        })\n          .join(' ')\n          .split(/((?:\\d\\d\\d ?){10}(?: ))/)\n          .filter(Boolean)\n          .map(Function.call.bind(''.trim))\n          .join('\\n')\n    }\n  }\n}\n\ntypes.forEach(function(type){\n  ArrayBuffers[type+'Array'] = global[type+'Array'];\n  DataBuffer.prototype['read'+type] = function(offset){\n    return this.view['get'+type](toNum(offset), this.endianness === 'LE');\n  }\n  DataBuffer.prototype['write'+type] = function(offset, value){\n    return this.view['set'+type](toNum(offset), toNum(value), this.endianness === 'LE');\n  }\n});\n\n\nArray.apply(null, Array(20)).forEach(function(n, index){\n  Object.defineProperty(DataBuffer.prototype, index, {\n    configurable: true,\n    get: function(){ return this.readUint8(index) },\n    set: function(v){ return this.writeUint8(index, v) }\n  })\n});\n"},"lineCount":195}},"error":null,"hash":"4ea6fe3a2122cab61f71fb5184963e46","cacheData":{"env":{}}}